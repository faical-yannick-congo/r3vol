from corrdb.common.models import UserModel
from corrdb.common.models import ProfileModel
import hashlib
import datetime
import simplejson as json
import os

def check_admin(email=None):
    if email:
        account = UserModel.objects(email=email).first()
        if account and account.group == "admin":
            return True
        else:
            return False
    else:
        return False

def create_admin(email, password, fname, lname):
    hash_pwd = hashlib.sha256(('CoRRPassword_%s'%password).encode("ascii")).hexdigest()
    (account, created) = UserModel.objects.get_or_create(created_at=str(datetime.datetime.utcnow()), email=email, group='admin', api_token=hashlib.sha256(('CoRRToken_%s_%s'%(email, str(datetime.datetime.utcnow()))).encode("ascii")).hexdigest())
    if created:
        account.password = hash_pwd
        account.save()
        (profile_model, created) = ProfileModel.objects.get_or_create(created_at=str(datetime.datetime.utcnow()), user=account, fname=fname, lname=lname)
        if created:
            return True
        else:
            return False
    else:
        return False

content = {}
if os.path.isfile("/tmp/tmp_admin.json"):
    with open("/tmp/tmp_admin.json", "r") as admin_stuff:
        content = json.loads(admin_stuff.read())
    try:
        if not check_admin(content['admin-email']):
            create_admin(content['admin-email'], content['admin-password'], content['admin-fname'], content['admin-lname'])
    except:
        pass